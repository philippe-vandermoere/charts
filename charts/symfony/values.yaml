version: ""

image:
  repository: php
  tag: 8.0-fpm-alpine
  pullPolicy: IfNotPresent

env: {}
#  TIMEZONE: utc

web:
  enabled: true
  replica: 3
  ingress:
    enabled: false
    certManager: false
    hostname: symfony.local
    path: /
    pathType: ImplementationSpecific
#    extraHosts:
#      - name: symfony.local
#        path: /
#        pathType: ImplementationSpecific

  service:
    type: ClusterIP
    port: 80
    clusterIP: ""

#    type: LoadBalancer
#    loadBalancerIP: 10.10.10.10
#    loadBalancerSourceRanges:
#      - "10.10.10.10/8"
#    nodePort: 8080
#
#    type: NodePort
#    nodePort: 8080

  nginx:
    port: 80
    image:
      repository: nginx
      tag: stable-alpine
      pullPolicy: IfNotPresent
    config:
      sharedPublicFiles:
        enabled: false
        initCommand: 'if [ -d {{ .Values.web.nginx.config.documentRoot }} ]; then cp -r {{ .Values.web.nginx.config.documentRoot }}/. /mnt/; fi'
      documentRoot: /var/www/html/public
      main: |-
        user nginx;
        worker_processes auto;
        pid /var/run/nginx.pid;

        events {
            worker_connections 1024;
        }

        http {
            server_tokens off;

            sendfile on;
            tcp_nopush on;
            tcp_nodelay on;

            keepalive_requests 100;
            keepalive_timeout 65;

            include /etc/nginx/mime.types;
            default_type application/octet-stream;

            map $http_x_request_id $request_uid {
                default   $http_x_request_id;
                ""        $request_id;
            }

            log_format main '$remote_addr - [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" $request_time $request_uid';

            access_log /var/log/nginx/access.log main;
            error_log /var/log/nginx/error.log error;

            include /etc/nginx/conf.d/*.conf;
        }

      serverBlock: |-
        server {
            listen {{ .Values.web.nginx.port }};

            root {{ .Values.web.nginx.config.documentRoot }};

            add_header X-Request-Id $request_uid;

            location / {
                try_files $uri /index.php$is_args$args;
            }

             location ~ ^/index\.php(/|$) {
                fastcgi_pass 127.0.0.1:9000;
                include fastcgi_params;
                fastcgi_split_path_info ^(.+\.php)(/.*)$;
                fastcgi_param HTTP_X_REQUEST_ID $request_uid;
                fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
                fastcgi_param DOCUMENT_ROOT $realpath_root;
                internal;
            }

            location ~ \.php$ {
                return 404;
            }

            location /healthz {
                access_log off;
                return 200;
            }

            location /status {
                access_log off;
                stub_status on;
                allow 127.0.0.1;
                deny all;
            }
        }

    livenessProbe:
      initialDelaySeconds: 5
      timeoutSeconds: 5
      periodSeconds: 10
      failureThreshold: 6
      successThreshold: 1
    readinessProbe:
      initialDelaySeconds: 5
      timeoutSeconds: 3
      periodSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    resources:
      requests: {}
      limits: {}
  phpfpm:
#    image:
#      repository: php
#      tag: 8.0-alpine
#      pullPolicy: IfNotPresent
    env: {}
    livenessProbe:
      initialDelaySeconds: 5
      timeoutSeconds: 5
      periodSeconds: 10
      failureThreshold: 6
      successThreshold: 1
    readinessProbe:
      initialDelaySeconds: 5
      timeoutSeconds: 3
      periodSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    resources:
      requests: {}
      limits: {}

workers: []
#  - name: messenger
#    enabled: true
#    replica: 3
#    command: bin/console messenger:consume --memory-limit=128M --time-limit=3600
#    image:
#      repository: php
#      tag: 8.0-alpine
#      pullPolicy: IfNotPresent
#    env:
#      TIMEZONE: utc
#    resources:
#      requests: {}
#      limits: {}

crons: []
#  - name: test
#    enabled: true
#    schedule: "* * * * *"
#    command: bin/console doctrine:query:sql 'SELECT 1;'
#    image:
#      repository: php
#      tag: 8.0-alpine
#      pullPolicy: IfNotPresent
#    env:
#      TIMEZONE: utc
#    resources:
#      requests: {}
#      limits: {}

migrations: []
#  - name: doctrine
#    enabled: true
#    command: bin/console doctrine:migrations:migrate --allow-no-migration --no-interaction
#    image:
#      repository: php
#      tag: 8.0-alpine
#      pullPolicy: IfNotPresent
#    env:
#      TIMEZONE: utc
#    resources:
#      requests: {}
#      limits: {}
#    timeout: 60
#    restartPolicy: Never
#    backoffLimit: 0

metrics:
  enabled: false
  serviceMonitor:
    enabled: false
    namespace: prometheus
  nginx:
    statusUrl: http://127.0.0.1:80/status
    port: 9113
    path: /metrics
    image:
      repository: nginx/nginx-prometheus-exporter
      tag: 0.8.0
      pullPolicy: IfNotPresent
    resources:
      requests: {}
      limits: {}
  phpfpm:
    statusUrl: tcp://127.0.0.1:9000/status
    port: 9114
    path: /metrics
    image:
      repository: bakins/php-fpm-exporter
      tag: v0.6.1
      pullPolicy: IfNotPresent
    resources:
      requests: {}
      limits: {}

dependencies:
  timeout: 20
  image:
    repository: busybox
    tag: 1.32.0
    pullPolicy: IfNotPresent
  services: []
#    - name: mysql
#      host: mysql
#      port: 3306
